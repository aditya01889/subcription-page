{"version":3,"file":"static/js/333.eb1d9f94.chunk.js","mappings":"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","sources":["components/DeliveryForm.js","config.js","components/SubscriptionPlans.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './DeliveryForm.css';\r\nimport { useError } from '../ErrorContext';  // Import the useError hook\r\nimport { debounce } from 'lodash';  // Debouncing with lodash\r\n\r\nModal.setAppElement('#root');  // Set the root element for accessibility\r\n\r\nconst DeliveryForm = ({ isOpen, onRequestClose, onSubmit, cart }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    phone: ''\r\n  });\r\n\r\n  const { showError, clearError } = useError();  // Get the showError and clearError functions from useError\r\n\r\n  // Debounce the input change to avoid excessive re-rendering\r\n  const debouncedHandleChange = useCallback(debounce((name, value) => {\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  }, 300), []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    debouncedHandleChange(name, value);  // Use debounced change handler\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form inputs\r\n    if (!formData.name || !formData.address || !formData.email || !formData.phone) {\r\n      showError('Please fill out all fields.');  // Show error if form is incomplete\r\n      return;\r\n    }\r\n\r\n    // Check if cart has any items\r\n    if (cart.length === 0) {\r\n      showError('Your cart is empty. Please add some items to your cart.');  // Show error if cart is empty\r\n      return;\r\n    }\r\n    \r\n    // Clear any existing errors when proceeding\r\n    clearError();\r\n\r\n    // Pass the form data along with the cart to the parent component\r\n    onSubmit({\r\n      ...formData,\r\n      cart  // Include the cart with all selected products and quantities\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onRequestClose={onRequestClose} className=\"delivery-modal\">\r\n      <h2>Delivery Details</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">\r\n          Name:\r\n          <input \r\n            id=\"name\"\r\n            type=\"text\" \r\n            name=\"name\" \r\n            value={formData.name} \r\n            onChange={handleChange} \r\n            aria-label=\"Enter your name\"\r\n            required \r\n          />\r\n        </label>\r\n        <label htmlFor=\"address\">\r\n          Address:\r\n          <input \r\n            id=\"address\"\r\n            type=\"text\" \r\n            name=\"address\" \r\n            value={formData.address} \r\n            onChange={handleChange} \r\n            aria-label=\"Enter your address\"\r\n            required \r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email:\r\n          <input \r\n            id=\"email\"\r\n            type=\"email\" \r\n            name=\"email\" \r\n            value={formData.email} \r\n            onChange={handleChange} \r\n            aria-label=\"Enter your email\"\r\n            required \r\n          />\r\n        </label>\r\n        <label htmlFor=\"phone\">\r\n          Phone:\r\n          <input \r\n            id=\"phone\"\r\n            type=\"tel\" \r\n            name=\"phone\" \r\n            value={formData.phone} \r\n            onChange={handleChange} \r\n            aria-label=\"Enter your phone number\"\r\n            required \r\n          />\r\n        </label>\r\n        <button type=\"submit\">Proceed to Payment</button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeliveryForm;\r\n","const config = {\r\n    razorpayKey: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n    backendUrl: process.env.REACT_APP_BACKEND_URL,\r\n  };\r\n  \r\n  export default config;\r\n  ","import React, { useState, useCallback } from 'react';\r\nimport './SubscriptionPlans.css';\r\nimport DeliveryForm from './DeliveryForm';\r\nimport { useError } from '../ErrorContext';  // Using the useError hook for global error handling\r\nimport axios from 'axios';\r\nimport config from '../config';  // Import the config file\r\n\r\nconst subscriptions = [\r\n  {\r\n    name: 'Kitten Subscription',\r\n    price: 1499,\r\n    meals: '21 Meals (70 gm each)',\r\n    broth: '1 Broth Pack (100ml)',\r\n    mealsPerDay: '3 Meals a Day',\r\n    delivery: 'Free Weekly Delivery',\r\n    savings: 'Save ₹201/week',\r\n    image: `${process.env.PUBLIC_URL}/images/kitten-box.webp`,\r\n    planId: 'plan_P16C8fYlOuifli'  // Razorpay Plan ID\r\n  },\r\n  {\r\n    name: 'Cat Subscription',\r\n    price: 1799,\r\n    meals: '28 Meals (70 gm each)',\r\n    broth: '2 Broth Packs (100ml each)',\r\n    mealsPerDay: '4 Meals a Day',\r\n    delivery: 'Free Weekly Delivery',\r\n    savings: 'Save ₹261/week',\r\n    image: `${process.env.PUBLIC_URL}/images/cat-box.webp`,\r\n    planId: 'plan_P16CnSJeddGUF3'  // Razorpay Plan ID\r\n  }\r\n];\r\n\r\nconst SubscriptionPlans = () => {\r\n  const [quantities, setQuantities] = useState([0, 0]);  // Allow zero quantities for both subscriptions\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const { showError, clearError } = useError();  // Use the useError hook for error handling\r\n\r\n  // useCallback for memoizing functions and improving performance\r\n  const updateCart = useCallback(() => {\r\n    const newCart = subscriptions\r\n      .map((subscription, index) => ({\r\n        name: subscription.name,\r\n        sku: `SUB_${subscription.name.replace(/\\s/g, '_').toUpperCase()}`,\r\n        price: subscription.price,\r\n        quantity: quantities[index],\r\n        planId: subscription.planId  // Ensure plan_id is included\r\n      }))\r\n      .filter(item => item.quantity > 0);  // Filter out items with zero quantity\r\n\r\n    if (newCart.length === 0) {\r\n      showError('Please select at least one item to proceed.');\r\n      return;\r\n    }\r\n\r\n    setCart(newCart);\r\n    clearError();  // Clear any existing errors\r\n    setIsModalOpen(true);  // Open the delivery form modal\r\n  }, [quantities, showError, clearError]);\r\n\r\n  const handleQuantityChange = useCallback((index, value) => {\r\n    setQuantities(prev => {\r\n      const newQuantities = [...prev];\r\n      newQuantities[index] = Math.max(0, Number(value));  // Ensure quantity can't be negative\r\n      return newQuantities;\r\n    });\r\n  }, []);\r\n\r\n  const handleFormSubmit = async (formData) => {\r\n    try {\r\n      const razorpayResponse = await axios.post(`${config.backendUrl}/create-razorpay-subscriptions`, {\r\n        cart: cart,  // Sending the full cart to the backend, including planId\r\n        email: formData.email,\r\n        phone: formData.phone\r\n      });\r\n\r\n      const subscriptionIds = razorpayResponse.data.subscriptionIds.map(item => item.subscriptionId);\r\n\r\n      const options = {\r\n        key: config.razorpayKey,  // Use key from config\r\n        subscription_id: subscriptionIds[0],  // Using the first subscription ID\r\n        name: 'Cozy Cat Kitchen',\r\n        description: cart.map(item => item.name).join(', '),\r\n        handler: function (response) {\r\n          axios.post(`${config.backendUrl}/create-shiprocket-order`, {\r\n            ...formData,\r\n            cart: cart\r\n          }).catch(err => {\r\n            console.error('Error creating Shiprocket order:', err);\r\n            showError('Order creation failed. Please try again.');\r\n          });\r\n        },\r\n        prefill: {\r\n          name: formData.name,\r\n          email: formData.email,\r\n          contact: formData.phone\r\n        },\r\n        theme: {\r\n          color: '#3399cc'\r\n        }\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      console.error('Error processing payment:', error);\r\n      showError('Payment failed, please try again.');\r\n    }\r\n\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <section id=\"subscription-plans\" className=\"subscription-section\">\r\n      <img src={`${process.env.PUBLIC_URL}/images/logo-white.webp`} alt=\"Cozy Cat Kitchen Logo\" className=\"title-logo\" loading=\"lazy\" />\r\n      <div className=\"subscription-plans\">\r\n        {subscriptions.map((subscription, index) => (\r\n          <div key={index} className={`plan-card ${subscription.name.toLowerCase().includes('kitten') ? 'kitten-subscription' : 'cat-subscription'}`}>\r\n            <img src={subscription.image} alt={subscription.name} className=\"box-icon\" loading=\"lazy\" />\r\n            <h3>{subscription.name}</h3>\r\n            <p>₹{subscription.price} / week</p>\r\n            <div className=\"card-line\"></div>\r\n            <ul>\r\n              <li>🐾 {subscription.meals}</li>\r\n              <li>🐾 {subscription.broth}</li>\r\n              <li>🐾 {subscription.mealsPerDay}</li>\r\n              <li>🐾 {subscription.delivery}</li>\r\n              <li>🐾 {subscription.savings}</li>\r\n            </ul>\r\n            <div className=\"quantity-buttons\">\r\n              <button onClick={() => handleQuantityChange(index, quantities[index] - 1)}>-</button>\r\n              <input\r\n                type=\"number\"\r\n                value={quantities[index]}\r\n                onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n                min=\"0\"\r\n              />\r\n              <button onClick={() => handleQuantityChange(index, quantities[index] + 1)}>+</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"buy-now-button\" onClick={updateCart}>\r\n        Buy Now\r\n      </button>\r\n      <DeliveryForm isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)} onSubmit={handleFormSubmit} cart={cart} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SubscriptionPlans;\r\n"],"names":["Modal","_ref","isOpen","onRequestClose","onSubmit","cart","formData","setFormData","useState","name","address","email","phone","showError","clearError","useError","debouncedHandleChange","useCallback","debounce","value","prevData","handleChange","e","target","_jsxs","className","children","_jsx","preventDefault","length","htmlFor","id","type","onChange","required","razorpayKey","process","backendUrl","subscriptions","price","meals","broth","mealsPerDay","delivery","savings","image","planId","SubscriptionPlans","quantities","setQuantities","isModalOpen","setIsModalOpen","setCart","updateCart","newCart","map","subscription","index","sku","replace","toUpperCase","quantity","filter","item","handleQuantityChange","prev","newQuantities","Math","max","Number","src","alt","loading","toLowerCase","includes","onClick","min","DeliveryForm","async","subscriptionIds","axios","post","config","data","subscriptionId","options","key","subscription_id","description","join","handler","response","catch","err","console","error","prefill","contact","theme","color","window","Razorpay","open"],"sourceRoot":""}